int ex1()
{
   int big= 0;

   printf("introduza uma sequencia de numeros( 1 por linha maluco :-)  ):");
   
   
   while(1){
       int n;
       assert(scanf("%d",&n)==1);
       
       if(n==0) break;
       if(n>big) big=n;
   }
   
  printf("%d é o maior\n",big);
}

int ex2()
{
   int media= 0;
   int count=0;
   int soma=0;

   printf("introduza uma sequencia de numeros( 1 por linha maluco :-)  ):");
   
   
   while(1){
       int n;
       assert(scanf("%d",&n)==1);
       count++;
       soma=soma+n;
       if(n==0) break;
   }
   media=soma/count;
  printf("%d é a media\n",media);
}

int ex3()
{
   int big=0;
   int sec=0;

   printf("introduza uma sequencia de numeros( 1 por linha maluco :-)  ):");
   
   
   while(1){
       int n;
       assert(scanf("%d",&n)==1);
       
       if(n==0) break;
       if(n>big){ 
       sec=big;
       big=n;
       }
       else if(n>sec){
        sec=n;   
       }
   }
   
  printf("%d é o segundo maior\n",sec);
}

int ex4()
{
    unsigned int n;
    int count=0;
    
    printf("insira um numero:\n");
    scanf("%d",&n);
    
    while(n){
    count+=(n%2);
    n=n/2;
    }
    printf("%d",count);
}

  int ex5() {
	int i;
	int n;
	int zeros = 0;
	printf("insira um numero:\n");
	scanf("%d",&n);
	
	for(i = n; i > 0; i/=2)
		if (i % 2 == 0) zeros++;
	printf("%d",zeros);
}

  int ex6() {
	
	int n;
    int index=1;
    
	printf("insira um numero:\n");
	scanf("%d",&n);
	
	while(n){
    if(n/10) index++;
    n=n/10;
	}
	printf("%d digitos\n",index);
    
}

char* ex7(char s1[], char s2[]) {
    char* cat = s1;
    while(*s1) s1++;
    while((*s1 = *s2)) {s1++; s2++;}
    *s1 = '\0';
    return cat;
}


char* ex8(char* dest, char source[]) {
    char* result = dest;
    while((*dest = *source)) { source++; dest++; }
    return result;
}


int ex9(char s1[], char s2[]) {
	int i;
	for(i = 0; s1[i] != '\0' && s2[i] != '\0' && s1[i] == s2[i]; i++);
	return s1[i]-s2[i];
	
}


char *ex10(char s1[], char s2[]) {
    char *res = NULL;
    int i,p;
    if (s2[0] == '\0') return s1;
    for(i = 0; s1[i] != '\0' && res == NULL; i++) {
        for(p = 0; s2[p] != '\0' && s2[p] == s1[i+p];p++);
        if (s2[p] == '\0')
            res = s1 + i;
    }
    return res;
}
